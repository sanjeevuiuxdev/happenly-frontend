{
    "sourceFile": "src/pages/Events.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1760209977503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760295399745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,21 @@\n import { useSearchParams } from 'react-router-dom'\n import { listEvents } from '../api/eventApi'\n import FilterBar from '../components/FilterBar'\n import EventCard from '../components/EventCard'\n+import CreateEventModal from '../components/CreateEventModal'\n+import { Button } from 'react-bootstrap'\n \n export default function Events(){\n   const [params] = useSearchParams()\n   const [filters, setFilters] = useState({ q:'', department:'', type:'', sort:'startAt' })\n   const [items, setItems] = useState([])\n   const [loading, setLoading] = useState(false)\n+  const [showCreate, setShowCreate] = useState(false)\n \n-  useEffect(()=>{\n+  const isAdmin = (localStorage.getItem('role') || 'user') === 'admin'  // <— role gate\n+\n+  useEffect(()=>{ \n     const from = params.get('from'); const to = params.get('to')\n     fetchList({ ...filters, from, to })\n     // eslint-disable-next-line\n   }, [filters, params])\n@@ -25,12 +30,23 @@\n   }\n \n   return (\n     <div>\n-      <h2 className=\"mb-3\">Upcoming Events</h2>\n+      <div className=\"d-flex justify-content-between align-items-center mb-3\">\n+        <h2 className=\"mb-0\">Upcoming Events</h2>\n+        {isAdmin && <Button onClick={()=>setShowCreate(true)}>+ Add Event</Button>}\n+      </div>\n+\n       <FilterBar filters={filters} setFilters={setFilters} />\n       {loading && <div className=\"text-muted\">Loading…</div>}\n\\ No newline at end of file\n       {items.map(e=> <EventCard key={e._id} e={e} />)}\n       {!loading && items.length===0 && <div className=\"text-muted\">No events found.</div>}\n+\n+      {/* Modal */}\n+      <CreateEventModal\n+        show={showCreate}\n+        onClose={()=>setShowCreate(false)}\n+        onCreated={()=>fetchList(filters)}\n+      />\n     </div>\n   )\n-}\n+}\n"
                },
                {
                    "date": 1760517370428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,90 @@\n-import { useEffect, useState } from 'react'\n-import { useSearchParams } from 'react-router-dom'\n-import { listEvents } from '../api/eventApi'\n-import FilterBar from '../components/FilterBar'\n-import EventCard from '../components/EventCard'\n-import CreateEventModal from '../components/CreateEventModal'\n-import { Button } from 'react-bootstrap'\n+import { useEffect, useState } from 'react';\n+import { useSearchParams } from 'react-router-dom';\n+import { listEvents } from '../api/eventApi';\n+import FilterBar from '../components/FilterBar';\n+import EventCard from '../components/EventCard';\n+import CreateEventModal from '../components/CreateEventModal';\n+import EventEditModal from '../components/EventEditModal';\n+import { Button } from 'react-bootstrap';\n \n-export default function Events(){\n-  const [params] = useSearchParams()\n-  const [filters, setFilters] = useState({ q:'', department:'', type:'', sort:'startAt' })\n-  const [items, setItems] = useState([])\n-  const [loading, setLoading] = useState(false)\n-  const [showCreate, setShowCreate] = useState(false)\n+export default function Events() {\n+  const [params] = useSearchParams();\n \n-  const isAdmin = (localStorage.getItem('role') || 'user') === 'admin'  // <— role gate\n+  const [filters, setFilters] = useState({ q: '', department: '', type: '', sort: 'startAt' });\n+  const [items, setItems] = useState([]);\n+  const [loading, setLoading] = useState(false);\n \n-  useEffect(()=>{ \n-    const from = params.get('from'); const to = params.get('to')\n-    fetchList({ ...filters, from, to })\n-    // eslint-disable-next-line\n-  }, [filters, params])\n+  // create modal\n+  const [showCreate, setShowCreate] = useState(false);\n \n+  // edit modal state\n+  const [showEdit, setShowEdit] = useState(false);\n+  const [editing, setEditing] = useState(null);\n+\n+  const isAdmin = (localStorage.getItem('role') || 'user') === 'admin';\n+\n+  useEffect(() => {\n+    const from = params.get('from');\n+    const to = params.get('to');\n+    fetchList({ ...filters, from, to });\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [filters, params]);\n+\n   const fetchList = async (f) => {\n\\ No newline at end of file\n-    setLoading(true)\n+    setLoading(true);\n     try {\n-      const { data } = await listEvents(f)\n-      setItems(data.items || data)\n-    } finally { setLoading(false) }\n-  }\n+      const { data } = await listEvents(f);\n+      setItems(data.items || data);\n+    } finally {\n+      setLoading(false);\n+    }\n+  };\n \n+  const refresh = () => {\n+    const from = params.get('from');\n+    const to = params.get('to');\n+    fetchList({ ...filters, from, to });\n+  };\n+\n   return (\n     <div>\n       <div className=\"d-flex justify-content-between align-items-center mb-3\">\n         <h2 className=\"mb-0\">Upcoming Events</h2>\n-        {isAdmin && <Button onClick={()=>setShowCreate(true)}>+ Add Event</Button>}\n+        {isAdmin && <Button onClick={() => setShowCreate(true)}>+ Add Event</Button>}\n       </div>\n \n       <FilterBar filters={filters} setFilters={setFilters} />\n+\n       {loading && <div className=\"text-muted\">Loading…</div>}\n-      {items.map(e=> <EventCard key={e._id} e={e} />)}\n-      {!loading && items.length===0 && <div className=\"text-muted\">No events found.</div>}\n \n-      {/* Modal */}\n+      {items.map((e) => (\n+        <EventCard\n+          key={e._id}\n+          e={e}\n+          refresh={refresh}\n+          openEdit={() => {\n+            setEditing(e);\n+            setShowEdit(true);\n+          }}\n+        />\n+      ))}\n+\n+      {!loading && items.length === 0 && <div className=\"text-muted\">No events found.</div>}\n+\n+      {/* Create Modal */}\n       <CreateEventModal\n         show={showCreate}\n-        onClose={()=>setShowCreate(false)}\n-        onCreated={()=>fetchList(filters)}\n+        onClose={() => setShowCreate(false)}\n+        onCreated={refresh}\n       />\n+\n+      {/* Edit Modal */}\n+      <EventEditModal\n+        show={showEdit}\n+        onClose={() => setShowEdit(false)}\n+        event={editing}\n+        onUpdated={refresh}\n+      />\n     </div>\n-  )\n-}\n+  );\n+}\n"
                },
                {
                    "date": 1761128016386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   useEffect(() => {\n     const from = params.get('from');\n     const to = params.get('to');\n     fetchList({ ...filters, from, to });\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n+    window.scrollTo(0, 0); // optional: reset scroll\n   }, [filters, params]);\n \n   const fetchList = async (f) => {\n     setLoading(true);\n@@ -86,5 +86,5 @@\n         onUpdated={refresh}\n       />\n     </div>\n   );\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1761235516933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       <FilterBar filters={filters} setFilters={setFilters} />\n \n       {loading && <div className=\"text-muted\">Loading…</div>}\n \n-      {items.map((e) => (\n+      {items.map.re((e) => (\n         <EventCard\n           key={e._id}\n           e={e}\n           refresh={refresh}\n"
                },
                {
                    "date": 1761235528063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       <FilterBar filters={filters} setFilters={setFilters} />\n \n       {loading && <div className=\"text-muted\">Loading…</div>}\n \n-      {items.map((e) => (\n+      {items.map.r((e) => (\n         <EventCard\n           key={e._id}\n           e={e}\n           refresh={refresh}\n"
                },
                {
                    "date": 1761235533286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       <FilterBar filters={filters} setFilters={setFilters} />\n \n       {loading && <div className=\"text-muted\">Loading…</div>}\n \n-      {items.map.re((e) => (\n+      {items.map((e) => (\n         <EventCard\n           key={e._id}\n           e={e}\n           refresh={refresh}\n"
                }
            ],
            "date": 1760209977503,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { listEvents } from '../api/eventApi'\nimport FilterBar from '../components/FilterBar'\nimport EventCard from '../components/EventCard'\n\nexport default function Events(){\n  const [params] = useSearchParams()\n  const [filters, setFilters] = useState({ q:'', department:'', type:'', sort:'startAt' })\n  const [items, setItems] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(()=>{\n    const from = params.get('from'); const to = params.get('to')\n    fetchList({ ...filters, from, to })\n    // eslint-disable-next-line\n  }, [filters, params])\n\n  const fetchList = async (f) => {\n    setLoading(true)\n    try {\n      const { data } = await listEvents(f)\n      setItems(data.items || data)\n    } finally { setLoading(false) }\n  }\n\n  return (\n    <div>\n      <h2 className=\"mb-3\">Upcoming Events</h2>\n      <FilterBar filters={filters} setFilters={setFilters} />\n      {loading && <div className=\"text-muted\">Loading…</div>}\n      {items.map(e=> <EventCard key={e._id} e={e} />)}\n      {!loading && items.length===0 && <div className=\"text-muted\">No events found.</div>}\n    </div>\n  )\n}"
        }
    ]
}