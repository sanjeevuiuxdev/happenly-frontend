{
    "sourceFile": "src/components/EventCard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1760209895489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760420328738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,56 @@\n-import { Card, Badge } from 'react-bootstrap'\n+import { Card, Badge, Ratio } from 'react-bootstrap'\n import { Link } from 'react-router-dom'\n \n-export default function EventCard({ e }){\n+function Cover({ media }) {\n+  if (!media?.length) return (\n+    <div className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\" style={{height:180}}>\n+      <span className=\"text-muted\">No media</span>\n+    </div>\n+  )\n+\n+  const m = media[0]\n+  if (m.kind === 'video') {\n+    // lightweight video cover (no autoplay)\n+    return (\n+      <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n+        <video src={m.url} muted controls={false} style={{objectFit:'cover', width:'100%', height:'100%'}}/>\n+      </Ratio>\n\\ No newline at end of file\n+    )\n+  }\n+\n   return (\n-    <Card className=\"mb-3 shadow-sm event-card\">\n-      <Card.Body>\n-        <div className=\"d-flex justify-content-between align-items-start\">\n-          <div>\n-            <Card.Title className=\"mb-1\"><Link to={`/events/${e._id}`}>{e.title}</Link></Card.Title>\n-            <Card.Subtitle className=\"text-muted\">{new Date(e.startAt || e.date).toLocaleString()} • {e.location?.name || e.location}</Card.Subtitle>\n-          </div>\n-          {e.department && <Badge bg=\"primary\" pill>{e.department}</Badge>}\n+    <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n+      <img src={m.url} alt=\"cover\" style={{objectFit:'cover', width:'100%', height:'100%'}} />\n+    </Ratio>\n+  )\n+}\n+\n+export default function EventCard({ e }) {\n+  return (\n+    <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n+      <div className=\"row g-0\">\n+        <div className=\"col-md-4 p-2\">\n+          <Cover media={e.media} />\n         </div>\n-        <Card.Text className=\"mt-2\">{e.description?.slice(0,160)}{e.description?.length>160?'…':''}</Card.Text>\n-      </Card.Body>\n+        <div className=\"col-md-8\">\n+          <Card.Body>\n+            <div className=\"d-flex justify-content-between align-items-start\">\n+              <div>\n+                <Card.Title className=\"mb-1\">\n+                  <Link to={`/events/${e._id}`}>{e.title}</Link>\n+                </Card.Title>\n+                <Card.Subtitle className=\"text-muted\">\n+                  {new Date(e.startAt || e.date).toLocaleString()} • {e.location?.name || e.location || 'TBA'}\n+                </Card.Subtitle>\n+              </div>\n+              {e.department && <Badge bg=\"primary\" pill>{e.department}</Badge>}\n+            </div>\n+            <Card.Text className=\"mt-2\">\n+              {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n+            </Card.Text>\n+          </Card.Body>\n+        </div>\n+      </div>\n     </Card>\n   )\n-}\n+}\n"
                },
                {
                    "date": 1760512337097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import { Card, Badge, Ratio } from 'react-bootstrap'\n import { Link } from 'react-router-dom'\n+import { deleteEvent } from '../api/eventApi';\n \n+\n function Cover({ media }) {\n   if (!media?.length) return (\n     <div className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\" style={{height:180}}>\n       <span className=\"text-muted\">No media</span>\n@@ -52,5 +54,5 @@\n         </div>\n       </div>\n     </Card>\n   )\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1760512357020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,26 @@\n             </div>\n             <Card.Text className=\"mt-2\">\n               {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n             </Card.Text>\n+\n+            {user?.role === 'admin' && (\n+  <div className=\"d-flex gap-2 mt-2\">\n+    <Button\n+      variant=\"outline-danger\"\n+      size=\"sm\"\n+      onClick={async () => {\n+        if (confirm('Delete this event permanently?')) {\n+          await deleteEvent(event._id);\n+          refresh(); // a function that re-fetches your event list\n+        }\n+      }}\n+    >\n+      Delete\n+    </Button>\n+  </div>\n+)}\n+\n           </Card.Body>\n         </div>\n       </div>\n     </Card>\n"
                },
                {
                    "date": 1760512411681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n   )\n }\n \n export default function EventCard({ e }) {\n+  const user = JSON.parse(localStorage.getItem('user'));\n+  const isAdmin = user?.role === 'admin';\n   return (\n     <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n       <div className=\"row g-0\">\n         <div className=\"col-md-4 p-2\">\n"
                },
                {
                    "date": 1760513455465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,24 +52,9 @@\n             <Card.Text className=\"mt-2\">\n               {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n             </Card.Text>\n \n-            {user?.role === 'admin' && (\n-  <div className=\"d-flex gap-2 mt-2\">\n-    <Button\n-      variant=\"outline-danger\"\n-      size=\"sm\"\n-      onClick={async () => {\n-        if (confirm('Delete this event permanently?')) {\n-          await deleteEvent(event._id);\n-          refresh(); // a function that re-fetches your event list\n-        }\n-      }}\n-    >\n-      Delete\n-    </Button>\n-  </div>\n-)}\n+            \n \n           </Card.Body>\n         </div>\n       </div>\n"
                },
                {
                    "date": 1760513462838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,22 @@\n             <Card.Text className=\"mt-2\">\n               {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n             </Card.Text>\n \n-            \n+            {isAdmin && (\n+  <Button\n+    variant=\"outline-danger\"\n+    size=\"sm\"\n+    onClick={async () => {\n+      if (confirm('Delete this event permanently?')) {\n+        await deleteEvent(e._id);\n+        refresh(); // re-fetch list passed from parent\n+      }\n+    }}\n+  >\n+    Delete\n+  </Button>\n+)}\n \n           </Card.Body>\n         </div>\n       </div>\n"
                },
                {
                    "date": 1760514163388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Link } from 'react-router-dom'\n import { deleteEvent } from '../api/eventApi';\n \n \n+\n function Cover({ media }) {\n   if (!media?.length) return (\n     <div className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\" style={{height:180}}>\n       <span className=\"text-muted\">No media</span>\n"
                },
                {
                    "date": 1760514236535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     </Ratio>\n   )\n }\n \n-export default function EventCard({ e }) {\n+export default function EventCard({ e, refresh, openEdit }) {\n   const user = JSON.parse(localStorage.getItem('user'));\n   const isAdmin = user?.role === 'admin';\n   return (\n     <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n"
                },
                {
                    "date": 1760514253759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import { Card, Badge, Ratio } from 'react-bootstrap'\n import { Link } from 'react-router-dom'\n import { deleteEvent } from '../api/eventApi';\n+import { Button } from 'react-bootstrap';\n \n \n-\n function Cover({ media }) {\n   if (!media?.length) return (\n     <div className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\" style={{height:180}}>\n       <span className=\"text-muted\">No media</span>\n@@ -28,8 +28,12 @@\n   )\n }\n \n export default function EventCard({ e, refresh, openEdit }) {\n+  const roleFromLS = localStorage.getItem('role');\n+  const roleFromUser = (() => {\n+    try { return JSON.parse(localStorage.getItem('user') || '{}')?.role; } catch { return null; }\n+  })();\n   const user = JSON.parse(localStorage.getItem('user'));\n   const isAdmin = user?.role === 'admin';\n   return (\n     <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n"
                },
                {
                    "date": 1760514277289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,22 +57,9 @@\n             <Card.Text className=\"mt-2\">\n               {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n             </Card.Text>\n \n-            {isAdmin && (\n-  <Button\n-    variant=\"outline-danger\"\n-    size=\"sm\"\n-    onClick={async () => {\n-      if (confirm('Delete this event permanently?')) {\n-        await deleteEvent(e._id);\n-        refresh(); // re-fetch list passed from parent\n-      }\n-    }}\n-  >\n-    Delete\n-  </Button>\n-)}\n+            \n \n           </Card.Body>\n         </div>\n       </div>\n"
                },
                {
                    "date": 1760514350259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,37 @@\n             <Card.Text className=\"mt-2\">\n               {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n             </Card.Text>\n \n-            \n+            <div className=\"d-flex gap-2 mt-2\">\n+      {isAdmin && (\n+        <>\n+          <Button\n+            variant=\"outline-primary\"\n+            size=\"sm\"\n+            onClick={() => openEdit?.(e)}   // make sure parent passes openEdit\n+          >\n+            Edit\n+          </Button>\n \n+          <Button\n+            variant=\"outline-danger\"\n+            size=\"sm\"\n+            onClick={async () => {\n+              if (confirm('Delete this event permanently?')) {\n+                await deleteEvent(e._id);\n+                refresh?.();                 // parent should re-fetch list\n+              }\n+            }}\n+          >\n+            Delete\n+          </Button>\n+        </>\n+      )}\n+    </div>\n+\n+    <div style={{background:'#fee'}}>[TEST BUTTONS VISIBLE?]</div>\n+\n           </Card.Body>\n         </div>\n       </div>\n     </Card>\n"
                },
                {
                    "date": 1760551735720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n         </>\n       )}\n     </div>\n \n-    <div style={{background:'#fee'}}>[TEST BUTTONS VISIBLE?]</div>\n+    \n \n           </Card.Body>\n         </div>\n       </div>\n"
                },
                {
                    "date": 1760551831686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,95 +1,125 @@\n-import { Card, Badge, Ratio } from 'react-bootstrap'\n-import { Link } from 'react-router-dom'\n+import { Card, Badge, Ratio, Button } from 'react-bootstrap';\n+import { Link } from 'react-router-dom';\n import { deleteEvent } from '../api/eventApi';\n-import { Button } from 'react-bootstrap';\n \n-\n+// ---------- MEDIA COVER COMPONENT ----------\n function Cover({ media }) {\n-  if (!media?.length) return (\n-    <div className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\" style={{height:180}}>\n-      <span className=\"text-muted\">No media</span>\n-    </div>\n-  )\n+  if (!media?.length) {\n+    return (\n+      <div\n+        className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\"\n+        style={{ height: 180 }}\n+      >\n+        <span className=\"text-muted\">No media</span>\n+      </div>\n+    );\n+  }\n \n-  const m = media[0]\n+  const m = media[0];\n   if (m.kind === 'video') {\n-    // lightweight video cover (no autoplay)\n     return (\n       <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n-        <video src={m.url} muted controls={false} style={{objectFit:'cover', width:'100%', height:'100%'}}/>\n+        <video\n+          src={m.url}\n+          muted\n+          controls={false}\n+          style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n+        />\n       </Ratio>\n-    )\n+    );\n   }\n \n   return (\n     <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n-      <img src={m.url} alt=\"cover\" style={{objectFit:'cover', width:'100%', height:'100%'}} />\n+      <img\n+        src={m.url}\n+        alt=\"cover\"\n+        style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n+      />\n     </Ratio>\n-  )\n+  );\n }\n \n+// ---------- MAIN EVENT CARD ----------\n export default function EventCard({ e, refresh, openEdit }) {\n-  const roleFromLS = localStorage.getItem('role');\n-  const roleFromUser = (() => {\n-    try { return JSON.parse(localStorage.getItem('user') || '{}')?.role; } catch { return null; }\n+  const user = (() => {\n+    try {\n+      return JSON.parse(localStorage.getItem('user') || '{}');\n+    } catch {\n+      return {};\n+    }\n   })();\n-  const user = JSON.parse(localStorage.getItem('user'));\n   const isAdmin = user?.role === 'admin';\n+\n+  // handle delete\n+  const handleDelete = async () => {\n+    if (!confirm('Are you sure you want to delete this event permanently?')) return;\n+    try {\n+      await deleteEvent(e._id);\n+      refresh?.(); // ✅ auto refresh event list after deletion\n+    } catch (err) {\n+      console.error('Delete failed:', err);\n+      alert('Failed to delete event. Please try again.');\n+    }\n+  };\n+\n   return (\n     <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n       <div className=\"row g-0\">\n+        {/* COVER / IMAGE */}\n         <div className=\"col-md-4 p-2\">\n           <Cover media={e.media} />\n         </div>\n+\n+        {/* DETAILS */}\n         <div className=\"col-md-8\">\n           <Card.Body>\n             <div className=\"d-flex justify-content-between align-items-start\">\n               <div>\n                 <Card.Title className=\"mb-1\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n                 <Card.Subtitle className=\"text-muted\">\n-                  {new Date(e.startAt || e.date).toLocaleString()} • {e.location?.name || e.location || 'TBA'}\n+                  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n+                  {e.location?.name || e.location || 'TBA'}\n                 </Card.Subtitle>\n               </div>\n-              {e.department && <Badge bg=\"primary\" pill>{e.department}</Badge>}\n+              {e.department && (\n+                <Badge bg=\"primary\" pill>\n+                  {e.department}\n+                </Badge>\n+              )}\n             </div>\n+\n+            {/* DESCRIPTION */}\n             <Card.Text className=\"mt-2\">\n-              {e.description?.slice(0, 140)}{e.description?.length > 140 ? '…' : ''}\n+              {e.description?.slice(0, 140)}\n+              {e.description?.length > 140 ? '…' : ''}\n             </Card.Text>\n \n-            <div className=\"d-flex gap-2 mt-2\">\n-      {isAdmin && (\n-        <>\n-          <Button\n-            variant=\"outline-primary\"\n-            size=\"sm\"\n-            onClick={() => openEdit?.(e)}   // make sure parent passes openEdit\n-          >\n-            Edit\n-          </Button>\n+            {/* ADMIN ACTIONS */}\n+            {isAdmin && (\n+              <div className=\"d-flex gap-2 mt-2\">\n+                <Button\n+                  variant=\"outline-primary\"\n+                  size=\"sm\"\n+                  onClick={() => openEdit?.(e)}\n+                >\n+                  Edit\n+                </Button>\n \n-          <Button\n-            variant=\"outline-danger\"\n-            size=\"sm\"\n-            onClick={async () => {\n-              if (confirm('Delete this event permanently?')) {\n-                await deleteEvent(e._id);\n-                refresh?.();                 // parent should re-fetch list\n-              }\n-            }}\n-          >\n-            Delete\n-          </Button>\n-        </>\n-      )}\n-    </div>\n-\n-    \n-\n+                <Button\n+                  variant=\"outline-danger\"\n+                  size=\"sm\"\n+                  onClick={handleDelete}\n+                >\n+                  Delete\n+                </Button>\n+              </div>\n+            )}\n           </Card.Body>\n         </div>\n       </div>\n     </Card>\n-  )\n+  );\n }\n"
                },
                {
                    "date": 1760648865814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import { Card, Badge, Ratio, Button } from 'react-bootstrap';\n+import { Link } from 'react-router-dom';\n+import { deleteEvent } from '../api/eventApi';\n+\n+// ---------- MEDIA COVER COMPONENT ----------\n+function Cover({ media }) {\n+  if (!media?.length) {\n+    return (\n+      <div\n+        className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\"\n+        style={{ height: 180 }}\n+      >\n+        <span className=\"text-muted\">No media</span>\n+      </div>\n+    );\n+  }\n+\n+  const m = media[0];\n+  if (m.kind === 'video') {\n+    return (\n+      <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n+        <video\n+          src={m.url}\n+          muted\n+          controls={false}\n+          style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n+        />\n+      </Ratio>\n+    );\n+  }\n+\n+  return (\n+    <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n+      <img\n+        src={m.url}\n+        alt=\"cover\"\n+        style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n+      />\n+    </Ratio>\n+  );\n+}\n+\n+// ---------- MAIN EVENT CARD ----------\n+export default function EventCard({ e, refresh, openEdit }) {\n+  const user = (() => {\n+    try {\n+      return JSON.parse(localStorage.getItem('user') || '{}');\n+    } catch {\n+      return {};\n+    }\n+  })();\n+  const isAdmin = user?.role === 'admin';\n+\n+  // handle delete\n+  const handleDelete = async () => {\n+    if (!confirm('Are you sure you want to delete this event permanently?')) return;\n+    try {\n+      await deleteEvent(e._id);\n+      refresh?.(); // ✅ auto refresh event list after deletion\n+    } catch (err) {\n+      console.error('Delete failed:', err);\n+      alert('Failed to delete event. Please try again.');\n+    }\n+  };\n+\n+  return (\n+    <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n+      <div className=\"row g-0\">\n+        {/* COVER / IMAGE */}\n+        <div className=\"col-md-4 p-2\">\n+          <Cover media={e.media} />\n+        </div>\n+\n+        {/* DETAILS */}\n+        <div className=\"col-md-8\">\n+          <Card.Body>\n+            <div className=\"d-flex justify-content-between align-items-start\">\n+              <div>\n+                <Card.Title className=\"mb-1 pb-\">\n+                  <Link to={`/events/${e._id}`}>{e.title}</Link>\n+                </Card.Title>\n+                <Card.Subtitle className=\"text-muted\">\n+                  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n+                  {e.location?.name || e.location || 'TBA'}\n+                </Card.Subtitle>\n+              </div>\n+              {e.department && (\n+                <Badge bg=\"primary\" pill>\n+                  {e.department}\n+                </Badge>\n+              )}\n+            </div>\n+\n+            {/* DESCRIPTION */}\n+            <Card.Text className=\"mt-2\">\n+              {e.description?.slice(0, 140)}\n+              {e.description?.length > 140 ? '…' : ''}\n+            </Card.Text>\n+\n+            {/* ADMIN ACTIONS */}\n+            {isAdmin && (\n+              <div className=\"d-flex gap-2 mt-2\">\n+                <Button\n+                  variant=\"outline-primary\"\n+                  size=\"sm\"\n+                  onClick={() => openEdit?.(e)}\n+                >\n+                  Edit\n+                </Button>\n+\n+                <Button\n+                  variant=\"outline-danger\"\n+                  size=\"sm\"\n+                  onClick={handleDelete}\n+                >\n+                  Delete\n+                </Button>\n+              </div>\n+            )}\n+          </Card.Body>\n+        </div>\n+      </div>\n+    </Card>\n+  );\n+}\n"
                },
                {
                    "date": 1761125640374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,15 +75,17 @@\n         <div className=\"col-md-8\">\n           <Card.Body>\n             <div className=\"d-flex justify-content-between align-items-start\">\n               <div>\n-                <Card.Title className=\"mb-1 pb-\">\n+                <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n                 <Card.Subtitle className=\"text-muted\">\n-                  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n-                  {e.location?.name || e.location || 'TBA'}\n-                </Card.Subtitle>\n+  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n+  {typeof e.location === 'string'\n+    ? e.location\n+    : e.location?.name || 'TBA'}\n+</Card.Subtitle>\n               </div>\n               {e.department && (\n                 <Badge bg=\"primary\" pill>\n                   {e.department}\n@@ -122,129 +124,4 @@\n       </div>\n     </Card>\n   );\n }\n-import { Card, Badge, Ratio, Button } from 'react-bootstrap';\n-import { Link } from 'react-router-dom';\n-import { deleteEvent } from '../api/eventApi';\n-\n-// ---------- MEDIA COVER COMPONENT ----------\n-function Cover({ media }) {\n-  if (!media?.length) {\n-    return (\n-      <div\n-        className=\"bg-body-secondary d-flex align-items-center justify-content-center rounded\"\n-        style={{ height: 180 }}\n-      >\n-        <span className=\"text-muted\">No media</span>\n-      </div>\n-    );\n-  }\n-\n-  const m = media[0];\n-  if (m.kind === 'video') {\n-    return (\n-      <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n-        <video\n-          src={m.url}\n-          muted\n-          controls={false}\n-          style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n-        />\n-      </Ratio>\n-    );\n-  }\n-\n-  return (\n-    <Ratio aspectRatio=\"16x9\" className=\"rounded overflow-hidden\">\n-      <img\n-        src={m.url}\n-        alt=\"cover\"\n-        style={{ objectFit: 'cover', width: '100%', height: '100%' }}\n-      />\n-    </Ratio>\n-  );\n-}\n-\n-// ---------- MAIN EVENT CARD ----------\n-export default function EventCard({ e, refresh, openEdit }) {\n-  const user = (() => {\n-    try {\n-      return JSON.parse(localStorage.getItem('user') || '{}');\n-    } catch {\n-      return {};\n-    }\n-  })();\n-  const isAdmin = user?.role === 'admin';\n-\n-  // handle delete\n-  const handleDelete = async () => {\n-    if (!confirm('Are you sure you want to delete this event permanently?')) return;\n-    try {\n-      await deleteEvent(e._id);\n-      refresh?.(); // ✅ auto refresh event list after deletion\n-    } catch (err) {\n-      console.error('Delete failed:', err);\n-      alert('Failed to delete event. Please try again.');\n-    }\n-  };\n-\n-  return (\n-    <Card className=\"mb-3 shadow-sm event-card overflow-hidden\">\n-      <div className=\"row g-0\">\n-        {/* COVER / IMAGE */}\n-        <div className=\"col-md-4 p-2\">\n-          <Cover media={e.media} />\n-        </div>\n-\n-        {/* DETAILS */}\n-        <div className=\"col-md-8\">\n-          <Card.Body>\n-            <div className=\"d-flex justify-content-between align-items-start\">\n-              <div>\n-                <Card.Title className=\"mb-1\">\n-                  <Link to={`/events/${e._id}`}>{e.title}</Link>\n-                </Card.Title>\n-                <Card.Subtitle className=\"text-muted\">\n-                  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n-                  {e.location?.name || e.location || 'TBA'}\n-                </Card.Subtitle>\n-              </div>\n-              {e.department && (\n-                <Badge bg=\"primary\" pill>\n-                  {e.department}\n-                </Badge>\n-              )}\n-            </div>\n-\n-            {/* DESCRIPTION */}\n-            <Card.Text className=\"mt-2\">\n-              {e.description?.slice(0, 140)}\n-              {e.description?.length > 140 ? '…' : ''}\n-            </Card.Text>\n-\n-            {/* ADMIN ACTIONS */}\n-            {isAdmin && (\n-              <div className=\"d-flex gap-2 mt-2\">\n-                <Button\n-                  variant=\"outline-primary\"\n-                  size=\"sm\"\n-                  onClick={() => openEdit?.(e)}\n-                >\n-                  Edit\n-                </Button>\n-\n-                <Button\n-                  variant=\"outline-danger\"\n-                  size=\"sm\"\n-                  onClick={handleDelete}\n-                >\n-                  Delete\n-                </Button>\n-              </div>\n-            )}\n-          </Card.Body>\n-        </div>\n-      </div>\n-    </Card>\n-  );\n-}\n"
                },
                {
                    "date": 1761129938809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,13 +79,13 @@\n                 <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n                 <Card.Subtitle className=\"text-muted\">\n-  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n-  {typeof e.location === 'string'\n-    ? e.location\n-    : e.location?.name || 'TBA'}\n-</Card.Subtitle>\n+                  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n+                  {typeof e.location === 'string'\n+                    ? e.location\n+                    : e.location?.name || 'TBA'}\n+                </Card.Subtitle>\n               </div>\n               {e.department && (\n                 <Badge bg=\"primary\" pill>\n                   {e.department}\n"
                },
                {
                    "date": 1761129974310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,21 @@\n import { Link } from 'react-router-dom';\n import { deleteEvent } from '../api/eventApi';\n \n // ---------- MEDIA COVER COMPONENT ----------\n+\n+\n+\n+function locationLabel(loc) {\n+  if (!loc) return 'TBA';\n+  if (typeof loc === 'string') {\n+    if (/<iframe/i.test(loc)) return 'See map'; // don't show raw HTML\n+    return loc;\n+  }\n+  return loc?.name || 'TBA';\n+}\n+\n+\n function Cover({ media }) {\n   if (!media?.length) {\n     return (\n       <div\n"
                },
                {
                    "date": 1761130008594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n                 <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n                 <Card.Subtitle className=\"text-muted\">\n-                  {new Date(e.startAt || e.date).toLocaleString()} •{' '}\n+                {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n                   {typeof e.location === 'string'\n                     ? e.location\n                     : e.location?.name || 'TBA'}\n                 </Card.Subtitle>\n"
                },
                {
                    "date": 1761130170380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,14 +91,14 @@\n               <div>\n                 <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n-                <Card.Subtitle className=\"text-muted\">\n-                {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n-                  {typeof e.location === 'string'\n-                    ? e.location\n-                    : e.location?.name || 'TBA'}\n-                </Card.Subtitle>\n+                // (keep locationLabel as you wrote it)\n+\n+<Card.Subtitle className=\"text-muted\">\n+  {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n+</Card.Subtitle>\n+\n               </div>\n               {e.department && (\n                 <Badge bg=\"primary\" pill>\n                   {e.department}\n"
                },
                {
                    "date": 1761130176729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,14 +91,14 @@\n               <div>\n                 <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n-                // (keep locationLabel as you wrote it)\n \n-<Card.Subtitle className=\"text-muted\">\n-  {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n-</Card.Subtitle>\n \n+                <Card.Subtitle className=\"text-muted\">\n+                  {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n+                </Card.Subtitle>\n+\n               </div>\n               {e.department && (\n                 <Badge bg=\"primary\" pill>\n                   {e.department}\n"
                },
                {
                    "date": 1761130198092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,13 @@\n                 <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n \n-\n+                function fmtDate(d) {\n+  if (!d) return 'Date TBA';\n+  const dt = new Date(d);\n+  return isNaN(dt) ? 'Date TBA' : dt.toLocaleString();\n+}\n                 <Card.Subtitle className=\"text-muted\">\n                   {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n                 </Card.Subtitle>\n \n"
                },
                {
                    "date": 1761130670747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,16 +92,12 @@\n                 <Card.Title className=\"mb-1 pb-2\">\n                   <Link to={`/events/${e._id}`}>{e.title}</Link>\n                 </Card.Title>\n \n-                function fmtDate(d) {\n-  if (!d) return 'Date TBA';\n-  const dt = new Date(d);\n-  return isNaN(dt) ? 'Date TBA' : dt.toLocaleString();\n-}\n+\n                 <Card.Subtitle className=\"text-muted\">\n-                  {new Date(e.startAt || e.date).toLocaleString()} • {locationLabel(e.location)}\n-                </Card.Subtitle>\n+  {new Date(e.startAt || e.date).toLocaleString()}\n+</Card.Subtitle>\n \n               </div>\n               {e.department && (\n                 <Badge bg=\"primary\" pill>\n"
                }
            ],
            "date": 1760209895489,
            "name": "Commit-0",
            "content": "import { Card, Badge } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport default function EventCard({ e }){\n  return (\n    <Card className=\"mb-3 shadow-sm event-card\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between align-items-start\">\n          <div>\n            <Card.Title className=\"mb-1\"><Link to={`/events/${e._id}`}>{e.title}</Link></Card.Title>\n            <Card.Subtitle className=\"text-muted\">{new Date(e.startAt || e.date).toLocaleString()} • {e.location?.name || e.location}</Card.Subtitle>\n          </div>\n          {e.department && <Badge bg=\"primary\" pill>{e.department}</Badge>}\n        </div>\n        <Card.Text className=\"mt-2\">{e.description?.slice(0,160)}{e.description?.length>160?'…':''}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}"
        }
    ]
}