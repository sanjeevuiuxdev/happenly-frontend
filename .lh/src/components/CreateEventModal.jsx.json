{
    "sourceFile": "src/components/CreateEventModal.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1760295382617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760416997314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,28 +3,36 @@\n import { createEvent } from '../api/eventApi'\n \n export default function CreateEventModal({ show, onClose, onCreated }) {\n   const [form, setForm] = useState({\n-    title: '',\n-    description: '',\n-    department: '',\n-    type: '',\n-    startAt: '',\n-    endAt: '',\n-    location: ''\n+    title: '', description: '', department: '', type: '',\n+    startAt: '', endAt: '', location: ''\n   })\n+  const [files, setFiles] = useState([])         // FileList → Array\n+  const [previews, setPreviews] = useState([])\n \n   const change = e => setForm({ ...form, [e.target.name]: e.target.value })\n \n+  const onFile = (e) => {\n+    const arr = Array.from(e.target.files || [])\n+    setFiles(arr)\n+    setPreviews(arr.map(f => ({ name: f.name, url: URL.createObjectURL(f), type: f.type })))\n+  }\n+\n   const submit = async (e) => {\n     e.preventDefault()\n-    // backend expects startAt/endAt as ISO\n-    const payload = {\n-      ...form,\n-      location: { name: form.location }\n-    }\n-    const { data } = await createEvent(payload)\n+    const fd = new FormData()\n+    Object.entries(form).forEach(([k,v]) => fd.append(k, v))\n+    // tags example: comma separated\n+    // fd.append('tags', 'ai,tech')\n+\n+    files.forEach(f => fd.append('media', f))   // field name 'media' matches multer\n+\n+    const { data } = await createEvent(fd)\n     onCreated?.(data)\n+    // cleanup\n+    previews.forEach(p => URL.revokeObjectURL(p.url))\n+    setFiles([]); setPreviews([])\n     onClose()\n   }\n \n   return (\n@@ -35,12 +43,14 @@\n           <Form.Group className=\"mb-2\">\n             <Form.Label>Title</Form.Label>\n             <Form.Control name=\"title\" value={form.title} onChange={change} required />\n           </Form.Group>\n+\n           <Form.Group className=\"mb-2\">\n             <Form.Label>Description</Form.Label>\n             <Form.Control as=\"textarea\" rows={3} name=\"description\" value={form.description} onChange={change} />\n           </Form.Group>\n+\n           <Row className=\"g-2\">\n             <Col md>\n               <Form.Group className=\"mb-2\">\n                 <Form.Label>Department</Form.Label>\n@@ -53,8 +63,9 @@\n                 <Form.Control name=\"type\" value={form.type} onChange={change} placeholder=\"talk / workshop / contest\" />\n               </Form.Group>\n             </Col>\n           </Row>\n+\n           <Row className=\"g-2\">\n             <Col md>\n               <Form.Group className=\"mb-2\">\n                 <Form.Label>Start</Form.Label>\n@@ -67,13 +78,31 @@\n                 <Form.Control type=\"datetime-local\" name=\"endAt\" value={form.endAt} onChange={change} />\n               </Form.Group>\n             </Col>\n           </Row>\n-          <Form.Group className=\"mb-2\">\n+\n+          <Form.Group className=\"mb-3\">\n             <Form.Label>Location</Form.Label>\n             <Form.Control name=\"location\" value={form.location} onChange={change} placeholder=\"Auditorium\" />\n           </Form.Group>\n+\n+          <Form.Group>\n+            <Form.Label>Media (images/videos)</Form.Label>\n+            <Form.Control type=\"file\" accept=\"image/*,video/*\" multiple onChange={onFile} />\n+            {/* previews */}\n+            {previews.length > 0 && (\n+              <div className=\"mt-2 d-flex flex-wrap gap-2\">\n+                {previews.map(p => (\n+                  p.type.startsWith('image')\n+                    ? <img key={p.url} src={p.url} alt={p.name} width={90} height={60} className=\"rounded border\" />\n+                    : <video key={p.url} src={p.url} width={120} height={80} className=\"rounded border\" />\n+                ))}\n+              </div>\n+            )}\n+            <div className=\"form-text\">Up to 5 files • 10MB each • JPG/PNG/WebP/GIF/MP4/MOV/WebM</div>\n+          </Form.Group>\n         </Modal.Body>\n+\n         <Modal.Footer>\n           <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n           <Button type=\"submit\" variant=\"primary\">Create</Button>\n         </Modal.Footer>\n"
                },
                {
                    "date": 1760506673866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,10 @@\n             <Form.Label>Location</Form.Label>\n             <Form.Control name=\"location\" value={form.location} onChange={change} placeholder=\"Auditorium\" />\n           </Form.Group>\n \n+          \n+\n           <Form.Group>\n             <Form.Label>Media (images/videos)</Form.Label>\n             <Form.Control type=\"file\" accept=\"image/*,video/*\" multiple onChange={onFile} />\n             {/* previews */}\n"
                },
                {
                    "date": 1760506679131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,22 @@\n             <Form.Label>Location</Form.Label>\n             <Form.Control name=\"location\" value={form.location} onChange={change} placeholder=\"Auditorium\" />\n           </Form.Group>\n \n-          \n+          <Form.Group className=\"mb-2\">\n+  <Form.Label>Organizer Name</Form.Label>\n+  <Form.Control name=\"organizerName\" value={form.organizerName} onChange={change} />\n+</Form.Group>\n+<Form.Group className=\"mb-2\">\n+  <Form.Label>Organizer Company</Form.Label>\n+  <Form.Control name=\"organizerCompany\" value={form.organizerCompany} onChange={change} />\n+</Form.Group>\n+<Form.Group className=\"mb-3\">\n+  <Form.Label>Organizer Email (optional)</Form.Label>\n+  <Form.Control type=\"email\" name=\"organizerEmail\" value={form.organizerEmail} onChange={change} />\n+</Form.Group>\n \n+\n           <Form.Group>\n             <Form.Label>Media (images/videos)</Form.Label>\n             <Form.Control type=\"file\" accept=\"image/*,video/*\" multiple onChange={onFile} />\n             {/* previews */}\n"
                },
                {
                    "date": 1761129698238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,11 +80,18 @@\n             </Col>\n           </Row>\n \n           <Form.Group className=\"mb-3\">\n-            <Form.Label>Location</Form.Label>\n-            <Form.Control name=\"location\" value={form.location} onChange={change} placeholder=\"Auditorium\" />\n-          </Form.Group>\n+  <Form.Label>Location <small className=\"text-muted\">(text or Google Maps iframe)</small></Form.Label>\n+  <Form.Control\n+    name=\"location\"\n+    as=\"textarea\"        // if you prefer single-line keep it \"type='text'\"\n+    rows={2}\n+    placeholder='e.g. \"Auditorium\" or paste Google Maps <iframe ... ></iframe>'\n+    value={form.location || ''}\n+    onChange={onChange}\n+  />\n+</Form.Group>\n \n           <Form.Group className=\"mb-2\">\n   <Form.Label>Organizer Name</Form.Label>\n   <Form.Control name=\"organizerName\" value={form.organizerName} onChange={change} />\n"
                },
                {
                    "date": 1761129723716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n     as=\"textarea\"        // if you prefer single-line keep it \"type='text'\"\n     rows={2}\n     placeholder='e.g. \"Auditorium\" or paste Google Maps <iframe ... ></iframe>'\n     value={form.location || ''}\n-    onChange={onChange}\n+    // onChange={onChange}\n   />\n </Form.Group>\n \n           <Form.Group className=\"mb-2\">\n"
                },
                {
                    "date": 1761234945024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n           <Form.Group className=\"mb-3\">\n   <Form.Label>Location <small className=\"text-muted\">(text or Google Maps iframe)</small></Form.Label>\n   <Form.Control\n     name=\"location\"\n-    as=\"textarea\"        // if you prefer single-line keep it \"type='text'\"\n+    as=\"textarea\"    \n     rows={2}\n     placeholder='e.g. \"Auditorium\" or paste Google Maps <iframe ... ></iframe>'\n     value={form.location || ''}\n     // onChange={onChange}\n"
                },
                {
                    "date": 1761234958441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,15 +82,15 @@\n \n           <Form.Group className=\"mb-3\">\n   <Form.Label>Location <small className=\"text-muted\">(text or Google Maps iframe)</small></Form.Label>\n   <Form.Control\n-    name=\"location\"\n-    as=\"textarea\"    \n-    rows={2}\n-    placeholder='e.g. \"Auditorium\" or paste Google Maps <iframe ... ></iframe>'\n-    value={form.location || ''}\n-    // onChange={onChange}\n-  />\n+  as=\"textarea\"\n+  rows={2}\n+  placeholder='e.g. \"Auditorium\" or paste Google Maps <iframe ...></iframe>'\n+  value={form.location || ''}\n+  onChange={(e) => setForm({ ...form, location: e.target.value })}\n+/>\n+\n </Form.Group>\n \n           <Form.Group className=\"mb-2\">\n   <Form.Label>Organizer Name</Form.Label>\n"
                },
                {
                    "date": 1761281292858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   const [form, setForm] = useState({\n     title: '', description: '', department: '', type: '',\n     startAt: '', endAt: '', location: ''\n   })\n-  const [files, setFiles] = useState([])         // FileList → Array\n+  const [files, setFiles] = useState([])         \n   const [previews, setPreviews] = useState([])\n \n   const change = e => setForm({ ...form, [e.target.name]: e.target.value })\n \n"
                }
            ],
            "date": 1760295382617,
            "name": "Commit-0",
            "content": "import { useState } from 'react'\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap'\nimport { createEvent } from '../api/eventApi'\n\nexport default function CreateEventModal({ show, onClose, onCreated }) {\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    department: '',\n    type: '',\n    startAt: '',\n    endAt: '',\n    location: ''\n  })\n\n  const change = e => setForm({ ...form, [e.target.name]: e.target.value })\n\n  const submit = async (e) => {\n    e.preventDefault()\n    // backend expects startAt/endAt as ISO\n    const payload = {\n      ...form,\n      location: { name: form.location }\n    }\n    const { data } = await createEvent(payload)\n    onCreated?.(data)\n    onClose()\n  }\n\n  return (\n    <Modal show={show} onHide={onClose} centered>\n      <Form onSubmit={submit}>\n        <Modal.Header closeButton><Modal.Title>Create Event</Modal.Title></Modal.Header>\n        <Modal.Body>\n          <Form.Group className=\"mb-2\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control name=\"title\" value={form.title} onChange={change} required />\n          </Form.Group>\n          <Form.Group className=\"mb-2\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} name=\"description\" value={form.description} onChange={change} />\n          </Form.Group>\n          <Row className=\"g-2\">\n            <Col md>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Department</Form.Label>\n                <Form.Control name=\"department\" value={form.department} onChange={change} />\n              </Form.Group>\n            </Col>\n            <Col md>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Type</Form.Label>\n                <Form.Control name=\"type\" value={form.type} onChange={change} placeholder=\"talk / workshop / contest\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"g-2\">\n            <Col md>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>Start</Form.Label>\n                <Form.Control type=\"datetime-local\" name=\"startAt\" value={form.startAt} onChange={change} required />\n              </Form.Group>\n            </Col>\n            <Col md>\n              <Form.Group className=\"mb-2\">\n                <Form.Label>End</Form.Label>\n                <Form.Control type=\"datetime-local\" name=\"endAt\" value={form.endAt} onChange={change} />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Form.Group className=\"mb-2\">\n            <Form.Label>Location</Form.Label>\n            <Form.Control name=\"location\" value={form.location} onChange={change} placeholder=\"Auditorium\" />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>Cancel</Button>\n          <Button type=\"submit\" variant=\"primary\">Create</Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\n"
        }
    ]
}