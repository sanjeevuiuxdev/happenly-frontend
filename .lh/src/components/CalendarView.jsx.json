{
    "sourceFile": "src/components/CalendarView.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1760209934486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760210261604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n-import FullCalendar from '@fullcalendar/react'\n-import dayGridPlugin from '@fullcalendar/daygrid'\n-import interactionPlugin from '@fullcalendar/interaction'\n-import bootstrap5Plugin from '@fullcalendar/bootstrap5'\n-import '@fullcalendar/bootstrap5/index.css'\n+import FullCalendar from \"@fullcalendar/react\";\n+import dayGridPlugin from \"@fullcalendar/daygrid\";\n+import interactionPlugin from \"@fullcalendar/interaction\";\n+import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n+import \"@fullcalendar/bootstrap5/css/bootstrap5.css\";\n+import \"@fullcalendar/daygrid/main.css\";\n \n+\n export default function CalendarView({ onDateSelect }){\n   return (\n     <FullCalendar\n       plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n"
                },
                {
                    "date": 1760210303559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n import \"@fullcalendar/bootstrap5/css/bootstrap5.css\";\n import \"@fullcalendar/daygrid/main.css\";\n \n-\n export default function CalendarView({ onDateSelect }){\n   return (\n     <FullCalendar\n       plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n"
                },
                {
                    "date": 1760211122712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n import FullCalendar from \"@fullcalendar/react\";\n import dayGridPlugin from \"@fullcalendar/daygrid\";\n import interactionPlugin from \"@fullcalendar/interaction\";\n import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n-import \"@fullcalendar/bootstrap5/css/bootstrap5.css\";\n-import \"@fullcalendar/daygrid/main.css\";\n \n+// keep Bootstrap CSS via main.jsx: 'bootstrap/dist/css/bootstrap.min.css'\n+import \"@fullcalendar/daygrid/index.css\"; // use index.css here\n+\n+\n export default function CalendarView({ onDateSelect }){\n   return (\n     <FullCalendar\n       plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n"
                },
                {
                    "date": 1760211627150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,5 @@\n-import FullCalendar from \"@fullcalendar/react\";\n-import dayGridPlugin from \"@fullcalendar/daygrid\";\n-import interactionPlugin from \"@fullcalendar/interaction\";\n-import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n \n-// keep Bootstrap CSS via main.jsx: 'bootstrap/dist/css/bootstrap.min.css'\n-import \"@fullcalendar/daygrid/index.css\"; // use index.css here\n \n \n export default function CalendarView({ onDateSelect }){\n   return (\n"
                },
                {
                    "date": 1760212094933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n \n \n \n+\n export default function CalendarView({ onDateSelect }){\n   return (\n     <FullCalendar\n       plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n"
                },
                {
                    "date": 1760244353965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,9 @@\n+import FullCalendar from \"@fullcalendar/react\";\n+import dayGridPlugin from \"@fullcalendar/daygrid\";\n+import interactionPlugin from \"@fullcalendar/interaction\";\n+import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n+import \"@fullcalendar/daygrid/index.global.css\"; // ✅ CORRECT PATH for v6\n \n \n \n \n"
                },
                {
                    "date": 1760244614599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,11 @@\n import FullCalendar from \"@fullcalendar/react\";\n import dayGridPlugin from \"@fullcalendar/daygrid\";\n import interactionPlugin from \"@fullcalendar/interaction\";\n import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n-import \"@fullcalendar/daygrid/index.global.css\"; // ✅ CORRECT PATH for v6\n \n \n \n-\n export default function CalendarView({ onDateSelect }){\n   return (\n     <FullCalendar\n       plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n"
                },
                {
                    "date": 1760271533032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,17 @@\n-import FullCalendar from \"@fullcalendar/react\";\n-import dayGridPlugin from \"@fullcalendar/daygrid\";\n-import interactionPlugin from \"@fullcalendar/interaction\";\n-import bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n+import FullCalendar from '@fullcalendar/react';\n+import dayGridPlugin from '@fullcalendar/daygrid';\n+import interactionPlugin from '@fullcalendar/interaction';\n+import bootstrap5Plugin from '@fullcalendar/bootstrap5';\n+import '@fullcalendar/bootstrap5/index.css';\n \n-\n-\n-export default function CalendarView({ onDateSelect }){\n+export default function CalendarView({ onDateSelect }) {\n   return (\n     <FullCalendar\n       plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n       initialView=\"dayGridMonth\"\n\\ No newline at end of file\n       themeSystem=\"bootstrap5\"\n       height={520}\n-      dateClick={(info)=> onDateSelect?.(info.dateStr)}\n+      dateClick={(info) => onDateSelect?.(info.dateStr)}\n     />\n-  )\n-}\n+  );\n+}\n"
                },
                {
                    "date": 1760271695019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n import FullCalendar from '@fullcalendar/react';\n import dayGridPlugin from '@fullcalendar/daygrid';\n import interactionPlugin from '@fullcalendar/interaction';\n import bootstrap5Plugin from '@fullcalendar/bootstrap5';\n-import '@fullcalendar/bootstrap5/index.css';\n+import '@fullcalendar/common/main.css';\n+import '@fullcalendar/daygrid/main.css';\n+import 'bootstrap/dist/css/bootstrap.min.css';\n \n export default function CalendarView({ onDateSelect }) {\n   return (\n     <FullCalendar\n@@ -13,5 +15,5 @@\n       height={520}\n       dateClick={(info) => onDateSelect?.(info.dateStr)}\n     />\n   );\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1760271700403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,15 @@\n import '@fullcalendar/daygrid/main.css';\n import 'bootstrap/dist/css/bootstrap.min.css';\n \n export default function CalendarView({ onDateSelect }) {\n-  return (\n-    <FullCalendar\n-      plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n-      initialView=\"dayGridMonth\"\n-      themeSystem=\"bootstrap5\"\n-      height={520}\n-      dateClick={(info) => onDateSelect?.(info.dateStr)}\n-    />\n-  );\n-}\n+    return (\n+      <FullCalendar\n+        plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n+        initialView=\"dayGridMonth\"\n+        themeSystem=\"bootstrap5\"\n+        height={520}\n+        dateClick={(info) => onDateSelect?.(info.dateStr)}\n+      />\n+    );\n+  }\n+  \n"
                },
                {
                    "date": 1760272196239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,52 @@\n-import FullCalendar from '@fullcalendar/react';\n-import dayGridPlugin from '@fullcalendar/daygrid';\n-import interactionPlugin from '@fullcalendar/interaction';\n-import bootstrap5Plugin from '@fullcalendar/bootstrap5';\n-import '@fullcalendar/common/main.css';\n-import '@fullcalendar/daygrid/main.css';\n+import { useMemo } from 'react';\n+import { Calendar, dateFnsLocalizer } from 'react-big-calendar';\n+import { format, parse, startOfWeek, getDay } from 'date-fns';\n+import 'react-big-calendar/lib/css/react-big-calendar.css';\n import 'bootstrap/dist/css/bootstrap.min.css';\n \n-export default function CalendarView({ onDateSelect }) {\n-    return (\n-      <FullCalendar\n-        plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n-        initialView=\"dayGridMonth\"\n-        themeSystem=\"bootstrap5\"\n-        height={520}\n-        dateClick={(info) => onDateSelect?.(info.dateStr)}\n-      />\n-    );\n-  }\n-  \n+const locales = { 'en-US': require('date-fns/locale/en-US') };\n+\n+const localizer = dateFnsLocalizer({\n+  format,\n+  parse,\n+  startOfWeek: () => startOfWeek(new Date(), { weekStartsOn: 0 }),\n+  getDay,\n+  locales,\n+});\n+\n+/**\n+ * props:\n+ *  - events: [{ title, start: Date, end: Date, resource?: any }]\n+ *  - onDateSelect?: (isoDateString) => void   // called when user clicks a day cell\n+ *  - onEventClick?: (event) => void\n+ */\n+export default function CalendarView({ events = [], onDateSelect, onEventClick }) {\n+  // Bootstrap-ish coloring for events\n+  const eventPropGetter = useMemo(\n+    () => () => ({ className: 'bg-primary text-white border-0 rounded-1 px-1' }),\n+    []\n+  );\n+\n+  return (\n+    <div className=\"card shadow-sm\">\n+      <div className=\"card-body\">\n+        <Calendar\n+          localizer={localizer}\n+          events={events}\n+          startAccessor=\"start\"\n+          endAccessor=\"end\"\n+          style={{ height: 520 }}\n+          selectable\n+          onSelectSlot={(slot) => {\n+            // slot.start is a Date for the clicked cell\n+            const iso = slot.start.toISOString().slice(0, 10);\n+            onDateSelect && onDateSelect(iso);\n+          }}\n+          onSelectEvent={(e) => onEventClick && onEventClick(e)}\n+          popup\n+          eventPropGetter={eventPropGetter}\n+        />\n+      </div>\n+    </div>\n+  );\n+}\n"
                },
                {
                    "date": 1760272367463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n import { useMemo } from 'react';\n import { Calendar, dateFnsLocalizer } from 'react-big-calendar';\n import { format, parse, startOfWeek, getDay } from 'date-fns';\n+import enUS from 'date-fns/locale/en-US';\n import 'react-big-calendar/lib/css/react-big-calendar.css';\n import 'bootstrap/dist/css/bootstrap.min.css';\n \n-const locales = { 'en-US': require('date-fns/locale/en-US') };\n+const locales = { 'en-US': enUS };\n \n const localizer = dateFnsLocalizer({\n   format,\n   parse,\n"
                },
                {
                    "date": 1760297980210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,14 +16,14 @@\n });\n \n /**\n  * props:\n- *  - events: [{ title, start: Date, end: Date, resource?: any }]\n- *  - onDateSelect?: (isoDateString) => void   // called when user clicks a day cell\n- *  - onEventClick?: (event) => void\n+ *  - events: [{ title, start: Date, end: Date, id }]\n+ *  - onDateSelect(iso)         // click empty day cell\n+ *  - onEventClick(event)       // click event\n+ *  - onRangeChange(range)      // month/week/day navigation\n  */\n-export default function CalendarView({ events = [], onDateSelect, onEventClick }) {\n-  // Bootstrap-ish coloring for events\n+export default function CalendarView({ events = [], onDateSelect, onEventClick, onRangeChange }) {\n   const eventPropGetter = useMemo(\n     () => () => ({ className: 'bg-primary text-white border-0 rounded-1 px-1' }),\n     []\n   );\n@@ -38,13 +38,13 @@\n           endAccessor=\"end\"\n           style={{ height: 520 }}\n           selectable\n           onSelectSlot={(slot) => {\n-            // slot.start is a Date for the clicked cell\n             const iso = slot.start.toISOString().slice(0, 10);\n             onDateSelect && onDateSelect(iso);\n           }}\n           onSelectEvent={(e) => onEventClick && onEventClick(e)}\n+          onRangeChange={(r) => onRangeChange && onRangeChange(r)}\n           popup\n           eventPropGetter={eventPropGetter}\n         />\n       </div>\n"
                },
                {
                    "date": 1761124645236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,139 @@\n-import { useMemo } from 'react';\n+// src/components/CalendarView.jsx\n+import { useEffect, useMemo, useState } from 'react';\n+import { useNavigate } from 'react-router-dom';\n import { Calendar, dateFnsLocalizer } from 'react-big-calendar';\n-import { format, parse, startOfWeek, getDay } from 'date-fns';\n+import {\n+  format,\n+  parse,\n+  startOfMonth,\n+  endOfMonth,\n+  addMonths,\n+  subMonths,\n+} from 'date-fns';\n import enUS from 'date-fns/locale/en-US';\n+import { Button } from 'react-bootstrap';\n+import { listEvents } from '../api/eventApi';\n import 'react-big-calendar/lib/css/react-big-calendar.css';\n-import 'bootstrap/dist/css/bootstrap.min.css';\n \n const locales = { 'en-US': enUS };\n-\n const localizer = dateFnsLocalizer({\n   format,\n   parse,\n-  startOfWeek: () => startOfWeek(new Date(), { weekStartsOn: 0 }),\n-  getDay,\n+  startOfWeek: () => new Date(),\n+  getDay: (d) => d.getDay(),\n   locales,\n });\n \n-/**\n- * props:\n- *  - events: [{ title, start: Date, end: Date, id }]\n- *  - onDateSelect(iso)         // click empty day cell\n- *  - onEventClick(event)       // click event\n- *  - onRangeChange(range)      // month/week/day navigation\n- */\n-export default function CalendarView({ events = [], onDateSelect, onEventClick, onRangeChange }) {\n-  const eventPropGetter = useMemo(\n-    () => () => ({ className: 'bg-primary text-white border-0 rounded-1 px-1' }),\n-    []\n+// ---------- Custom Toolbar ----------\n+function CustomToolbar({ label, onNavigate }) {\n+  return (\n+    <div className=\"rbc-toolbar d-flex justify-content-between align-items-center mb-3\">\n+      <div className=\"d-flex gap-2\">\n+        <Button variant=\"light\" onClick={() => onNavigate('PREV')}>\n+          Back\n+        </Button>\n+        <Button variant=\"light\" onClick={() => onNavigate('TODAY')}>\n+          Today\n+        </Button>\n+        <Button variant=\"light\" onClick={() => onNavigate('NEXT')}>\n+          Next\n+        </Button>\n+      </div>\n+      <h5 className=\"m-0 fw-semibold\">{label}</h5>\n+      <div />\n+    </div>\n   );\n+}\n \n+// ---------- Main Calendar ----------\n+export default function CalendarView() {\n+  const navigate = useNavigate();\n+  const [date, setDate] = useState(new Date());\n+  const [items, setItems] = useState([]);\n+  const [loading, setLoading] = useState(false);\n+\n+  // Current month range\n+  const range = useMemo(() => {\n+    return { from: startOfMonth(date), to: endOfMonth(date) };\n+  }, [date]);\n+\n+  // Fetch events for visible month\n+  useEffect(() => {\n+    (async () => {\n+      setLoading(true);\n+      try {\n+        const { data } = await listEvents({\n+          from: range.from.toISOString(),\n+          to: range.to.toISOString(),\n+          sort: 'startAt',\n+          order: 'asc',\n+          limit: 500,\n+        });\n+        const events = (data.items || data).map((e) => ({\n+          ...e,\n+          title: e.title,\n+          start: new Date(e.startAt || e.date),\n+          end: new Date(e.endAt || e.startAt || e.date),\n+          resource: e,\n+        }));\n+        setItems(events);\n+      } finally {\n+        setLoading(false);\n+      }\n+    })();\n+  }, [range]);\n+\n+  // Color per department (optional)\n+  function eventStyleGetter(event) {\n+    const colorMap = {\n+      IT: '#0d6efd',\n+      CS: '#198754',\n+      ME: '#6f42c1',\n+      Other: '#6c757d',\n+    };\n+    const bg = colorMap[event.resource?.department] || '#0dcaf0';\n+    return { style: { backgroundColor: bg, borderColor: bg } };\n+  }\n+\n   return (\n-    <div className=\"card shadow-sm\">\n-      <div className=\"card-body\">\n-        <Calendar\n-          localizer={localizer}\n-          events={events}\n-          startAccessor=\"start\"\n-          endAccessor=\"end\"\n-          style={{ height: 520 }}\n-          selectable\n-          onSelectSlot={(slot) => {\n-            const iso = slot.start.toISOString().slice(0, 10);\n-            onDateSelect && onDateSelect(iso);\n-          }}\n-          onSelectEvent={(e) => onEventClick && onEventClick(e)}\n-          onRangeChange={(r) => onRangeChange && onRangeChange(r)}\n-          popup\n-          eventPropGetter={eventPropGetter}\n-        />\n-      </div>\n+    <div className=\"card p-3 shadow-sm\">\n+      <h3 className=\"mb-3\">Event Calendar Overview</h3>\n+      <p className=\"text-muted mb-3\">\n+        Click a date to filter events, or click an event to open its details.\n+      </p>\n+\n+      <Calendar\n+        localizer={localizer}\n+        events={items}\n+        date={date}\n+        view=\"month\" // ✅ Only Month view\n+        startAccessor=\"start\"\n+        endAccessor=\"end\"\n+        style={{ height: 600 }}\n+        toolbar={true}\n+        components={{\n+          toolbar: (props) => (\n+            <CustomToolbar\n+              {...props}\n+              onNavigate={(action) => {\n+                if (action === 'TODAY') setDate(new Date());\n+                else if (action === 'NEXT') setDate(addMonths(date, 1));\n+                else if (action === 'PREV') setDate(subMonths(date, 1));\n+              }}\n+            />\n+          ),\n+        }}\n+        onSelectEvent={(ev) => navigate(`/events/${ev.resource._id}`)}\n+        eventPropGetter={eventStyleGetter}\n+        messages={{\n+          month: 'Month',\n+          today: 'Today',\n+          previous: 'Back',\n+          next: 'Next',\n+        }}\n+      />\n+\n+      {loading && <div className=\"text-muted small mt-2\">Loading events…</div>}\n     </div>\n   );\n }\n"
                }
            ],
            "date": 1760209934486,
            "name": "Commit-0",
            "content": "import FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'\nimport '@fullcalendar/bootstrap5/index.css'\n\nexport default function CalendarView({ onDateSelect }){\n  return (\n    <FullCalendar\n      plugins={[dayGridPlugin, interactionPlugin, bootstrap5Plugin]}\n      initialView=\"dayGridMonth\"\n      themeSystem=\"bootstrap5\"\n      height={520}\n      dateClick={(info)=> onDateSelect?.(info.dateStr)}\n    />\n  )\n}"
        }
    ]
}