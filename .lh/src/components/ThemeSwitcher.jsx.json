{
    "sourceFile": "src/components/ThemeSwitcher.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1760209872065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761235750537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,29 @@\n-import { useEffect, useState } from 'react'\n-export default function ThemeSwitcher(){\n-  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light')\n-  useEffect(()=>{\n-    document.documentElement.setAttribute('data-bs-theme', theme)\n-    localStorage.setItem('theme', theme)\n-  },[theme])\n+import { Dropdown } from 'react-bootstrap';\n+import { useTheme } from '../theme/ThemeProvider';\n+\n+export default function ThemeSwitcher() {\n+  const { theme, setTheme } = useTheme();\n+\n+  const label = theme === 'system'\n\\ No newline at end of file\n+    ? `System (${document.documentElement.getAttribute('data-bs-theme')})`\n+    : theme[0].toUpperCase() + theme.slice(1);\n+\n   return (\n-    <select className=\"form-select form-select-sm w-auto\" value={theme} onChange={e=>setTheme(e.target.value)}>\n-      <option value=\"light\">Light</option>\n-      <option value=\"dark\">Dark</option>\n-    </select>\n-  )\n-}\n+    <Dropdown align=\"end\">\n+      <Dropdown.Toggle size=\"sm\" variant=\"outline-secondary\">\n+        {label}\n+      </Dropdown.Toggle>\n+      <Dropdown.Menu>\n+        <Dropdown.Item active={theme === 'light'} onClick={() => setTheme('light')}>\n+          Light\n+        </Dropdown.Item>\n+        <Dropdown.Item active={theme === 'dark'} onClick={() => setTheme('dark')}>\n+          Dark\n+        </Dropdown.Item>\n+        <Dropdown.Item active={theme === 'system'} onClick={() => setTheme('system')}>\n+          System\n+        </Dropdown.Item>\n+      </Dropdown.Menu>\n+    </Dropdown>\n+  );\n+}\n"
                },
                {
                    "date": 1761235928335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,27 @@\n-import { Dropdown } from 'react-bootstrap';\n-import { useTheme } from '../theme/ThemeProvider';\n+import { useEffect, useState } from \"react\";\n+import { Button } from \"react-bootstrap\";\n \n export default function ThemeSwitcher() {\n-  const { theme, setTheme } = useTheme();\n+  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n \n-  const label = theme === 'system'\n-    ? `System (${document.documentElement.getAttribute('data-bs-theme')})`\n-    : theme[0].toUpperCase() + theme.slice(1);\n+  // Apply selected theme to <html>\n+  useEffect(() => {\n+    document.documentElement.setAttribute(\"data-bs-theme\", theme);\n+    localStorage.setItem(\"theme\", theme);\n+  }, [theme]);\n \n+  const toggleTheme = () => {\n+    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\n+  };\n+\n   return (\n-    <Dropdown align=\"end\">\n-      <Dropdown.Toggle size=\"sm\" variant=\"outline-secondary\">\n-        {label}\n-      </Dropdown.Toggle>\n-      <Dropdown.Menu>\n-        <Dropdown.Item active={theme === 'light'} onClick={() => setTheme('light')}>\n\\ No newline at end of file\n-          Light\n-        </Dropdown.Item>\n-        <Dropdown.Item active={theme === 'dark'} onClick={() => setTheme('dark')}>\n-          Dark\n-        </Dropdown.Item>\n-        <Dropdown.Item active={theme === 'system'} onClick={() => setTheme('system')}>\n-          System\n-        </Dropdown.Item>\n-      </Dropdown.Menu>\n-    </Dropdown>\n+    <Button\n+      variant={theme === \"light\" ? \"outline-dark\" : \"outline-light\"}\n+      size=\"sm\"\n+      onClick={toggleTheme}\n+      title=\"Toggle light/dark\"\n+    >\n+      {theme === \"light\" ? \"üåô Dark\" : \"‚òÄÔ∏è Light\"}\n+    </Button>\n   );\n-}\n+}\n"
                },
                {
                    "date": 1761238244896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,48 @@\n-import { useEffect, useState } from \"react\";\n-import { Button } from \"react-bootstrap\";\n+import { useEffect, useState } from 'react';\n+import { Dropdown } from 'react-bootstrap';\n \n+// valid values: 'light' | 'dark' | 'auto'\n+const STORAGE_KEY = 'theme';\n+\n+function applyTheme(theme) {\n+  const root = document.documentElement;\n+  if (theme === 'auto') {\n+    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n+    root.setAttribute('data-bs-theme', prefersDark ? 'dark' : 'light');\n+  } else {\n+    root.setAttribute('data-bs-theme', theme);\n+  }\n+  localStorage.setItem(STORAGE_KEY, theme);\n+}\n+\n export default function ThemeSwitcher() {\n-  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n+  const [theme, setTheme] = useState(localStorage.getItem(STORAGE_KEY) || 'light');\n \n-  // Apply selected theme to <html>\n   useEffect(() => {\n-    document.documentElement.setAttribute(\"data-bs-theme\", theme);\n-    localStorage.setItem(\"theme\", theme);\n+    applyTheme(theme);\n+    // keep in sync when system scheme changes and user picked \"auto\"\n+    const mq = window.matchMedia('(prefers-color-scheme: dark)');\n+    const onChange = () => theme === 'auto' && applyTheme('auto');\n+    mq.addEventListener('change', onChange);\n+    return () => mq.removeEventListener('change', onChange);\n   }, [theme]);\n \n-  const toggleTheme = () => {\n-    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\n-  };\n+  const set = (val) => () => setTheme(val);\n \n+  const label = theme === 'auto' ? 'Auto'\n+             : theme === 'dark' ? 'Dark'\n+             : 'Light';\n+\n   return (\n-    <Button\n-      variant={theme === \"light\" ? \"outline-dark\" : \"outline-light\"}\n-      size=\"sm\"\n-      onClick={toggleTheme}\n-      title=\"Toggle light/dark\"\n-    >\n-      {theme === \"light\" ? \"üåô Dark\" : \"‚òÄÔ∏è Light\"}\n-    </Button>\n+    <Dropdown align=\"end\" className=\"me-2\">\n+      <Dropdown.Toggle size=\"sm\" variant=\"outline-secondary\">\n+        Theme: {label}\n+      </Dropdown.Toggle>\n+      <Dropdown.Menu>\n+        <Dropdown.Item active={theme==='light'} onClick={set('light')}>Light</Dropdown.Item>\n+        <Dropdown.Item active={theme==='dark'}  onClick={set('dark')}>Dark</Dropdown.Item>\n+        <Dropdown.Item active={theme==='auto'}  onClick={set('auto')}>Auto</Dropdown.Item>\n+      </Dropdown.Menu>\n+    </Dropdown>\n   );\n }\n"
                },
                {
                    "date": 1761238486480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       </Dropdown.Toggle>\n       <Dropdown.Menu>\n         <Dropdown.Item active={theme==='light'} onClick={set('light')}>Light</Dropdown.Item>\n         <Dropdown.Item active={theme==='dark'}  onClick={set('dark')}>Dark</Dropdown.Item>\n-        <Dropdown.Item active={theme==='auto'}  onClick={set('auto')}>Auto</Dropdown.Item>\n+        {/* <Dropdown.Item active={theme==='auto'}  onClick={set('auto')}>Auto</Dropdown.Item> */}\n       </Dropdown.Menu>\n     </Dropdown>\n   );\n }\n"
                },
                {
                    "date": 1761281356570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   const [theme, setTheme] = useState(localStorage.getItem(STORAGE_KEY) || 'light');\n \n   useEffect(() => {\n     applyTheme(theme);\n-    // keep in sync when system scheme changes and user picked \"auto\"\n+    \n     const mq = window.matchMedia('(prefers-color-scheme: dark)');\n     const onChange = () => theme === 'auto' && applyTheme('auto');\n     mq.addEventListener('change', onChange);\n     return () => mq.removeEventListener('change', onChange);\n"
                }
            ],
            "date": 1760209872065,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from 'react'\nexport default function ThemeSwitcher(){\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light')\n  useEffect(()=>{\n    document.documentElement.setAttribute('data-bs-theme', theme)\n    localStorage.setItem('theme', theme)\n  },[theme])\n  return (\n    <select className=\"form-select form-select-sm w-auto\" value={theme} onChange={e=>setTheme(e.target.value)}>\n      <option value=\"light\">Light</option>\n      <option value=\"dark\">Dark</option>\n    </select>\n  )\n}"
        }
    ]
}